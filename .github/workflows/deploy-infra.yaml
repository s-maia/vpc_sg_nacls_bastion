# This is a basic workflow to help you get started with Actions
name: 'Workflow - Deploy on multi-account AWS with Terraform'

on:
  push:
    branches:
    - main
    - staging
    - feature/**

# required permissions by GitHub Actions for assuming AWS IAM role    
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout


jobs:
  terraform-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    environment: ${{ (github.ref == 'refs/heads/main' && 'production') || (github.ref == 'refs/heads/staging' && 'staging') || 'dev' }}

    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      ENVIRONMENT_STAGE: ${{ vars.ENVIRONMENT_STAGE }}    
      GIT_REF_NAME: ${{ github.ref_name }}

    defaults:
      run:
        working-directory: ./infra-root

    steps:
      - uses: actions/checkout@v4



    # login to AWS
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.IAM_ROLE }}
          role-session-name: infra-runner-session

      - name: Terraform Init
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
          terraform init -backend-config="bucket=${AWS_ACCOUNT_ID}-state-bucket-${ENVIRONMENT_STAGE}" 
      
      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan -input=false -var-file=${ENVIRONMENT_STAGE}.tfvars

      # Build infrastructure according to Terraform configuration files
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var-file=${ENVIRONMENT_STAGE}.tfvars